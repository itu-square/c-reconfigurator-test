|- TranslationUnit
   |- ExternalDeclarationList
      |- Declaration
      |  |- DeclaringList
      |  |  |- xtc.lang.cpp.Syntax.Language<CHAR>char  
      |  |  |- ArrayDeclarator
      |  |  |  |- SimpleDeclarator
      |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_include  
      |  |  |  |- ArrayAbstractDeclarator
      |  |  |     |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |  |     |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- StringLiteralList
      |  |           |- xtc.lang.cpp.Syntax.Text<STRINGliteral>"#include <stdio.h>"  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- BasicDeclarationSpecifier
      |  |  |  |  |- DeclarationQualifierList
      |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<TYPEDEF>typedef  
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<UNSIGNED>unsigned  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<LONG>long  
      |  |  |- SimpleDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_t  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- TypedefTypeSpecifier
      |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |  |- SimpleDeclarator
      |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpu_none_mask  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- TypedefTypeSpecifier
      |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |  |- SimpleDeclarator
      |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpu_online_mask  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- SimpleDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>nr_node_ids_V0  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- TypedefTypeSpecifier
      |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |  |- UnaryIdentifierDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |- ArrayDeclarator
      |  |        |- SimpleDeclarator
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_to_cpumask_map_V0  
      |  |        |- ArrayAbstractDeclarator
      |  |           |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |           |- PrimaryExpression
      |  |           |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |  |- ShiftExpression
      |  |           |  |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |           |  |  |- xtc.lang.cpp.Syntax.Language<LS><<  
      |  |           |  |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>8  
      |  |           |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>setup_node_to_cpumask_map_V0  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- Declaration
      |  |     |  |- DeclaringList
      |  |     |  |  |- BasicTypeSpecifier
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<UNSIGNED>unsigned  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |     |  |  |- SimpleDeclarator
      |  |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- IterationStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<FOR>for  
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- AssignmentExpression
      |  |        |  |  |- PrimaryIdentifier
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |  |  |- AssignmentOperator
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |        |- RelationalExpression
      |  |        |  |- PrimaryIdentifier
      |  |        |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LT><  
      |  |        |  |- PrimaryIdentifier
      |  |        |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>nr_node_ids_V0  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- Increment
      |  |        |  |  |- PrimaryIdentifier
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<ICR>++  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- ExpressionStatement
      |  |           |- PrimaryExpression
      |  |           |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |  |- PrimaryExpression
      |  |           |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |  |  |- AssignmentExpression
      |  |           |  |  |  |- Subscript
      |  |           |  |  |  |  |- PrimaryIdentifier
      |  |           |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_to_cpumask_map_V0  
      |  |           |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |           |  |  |  |  |- PrimaryIdentifier
      |  |           |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |           |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |           |  |  |  |- AssignmentOperator
      |  |           |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |           |  |  |  |- PrimaryExpression
      |  |           |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |  |  |     |- UnaryExpression
      |  |           |  |  |     |  |- Unaryoperator
      |  |           |  |  |     |  |  |- xtc.lang.cpp.Syntax.Language<AND>&  
      |  |           |  |  |     |  |- PrimaryIdentifier
      |  |           |  |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpu_online_mask  
      |  |           |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- TypedefDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |  |- DeclarationQualifier
      |  |  |  |  |  |- TypeQualifier
      |  |  |  |  |     |- FunctionSpecifier
      |  |  |  |  |        |- xtc.lang.cpp.Syntax.Language<INLINE>inline  
      |  |  |  |  |- DeclarationQualifier
      |  |  |  |     |- TypeQualifier
      |  |  |  |        |- ConstQualifier
      |  |  |  |           |- xtc.lang.cpp.Syntax.Language<CONST>const  
      |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |  |- UnaryIdentifierDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |- FunctionDeclarator
      |  |        |- SimpleDeclarator
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_node_V1  
      |  |        |- PostfixingFunctionDeclarator
      |  |           |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |- ParameterTypeListOpt
      |  |           |  |- ParameterTypeList
      |  |           |     |- ParameterList
      |  |           |        |- ParameterDeclaration
      |  |           |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |           |           |- SimpleDeclarator
      |  |           |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |           |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- UnaryExpression
      |  |        |  |  |- Unaryoperator
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<AND>&  
      |  |        |  |  |- PrimaryIdentifier
      |  |        |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpu_online_mask  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- TypedefTypeSpecifier
      |  |  |  |- TypeQualifierList
      |  |  |  |  |- TypeQualifier
      |  |  |  |     |- ConstQualifier
      |  |  |  |        |- xtc.lang.cpp.Syntax.Language<CONST>const  
      |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |  |- UnaryIdentifierDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |- FunctionDeclarator
      |  |        |- SimpleDeclarator
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_node_V2  
      |  |        |- PostfixingFunctionDeclarator
      |  |           |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |- ParameterTypeListOpt
      |  |           |  |- ParameterTypeList
      |  |           |     |- ParameterList
      |  |           |        |- ParameterDeclaration
      |  |           |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |           |           |- SimpleDeclarator
      |  |           |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |           |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- SelectionStatement
      |  |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |- RelationalExpression
      |  |     |  |  |- PrimaryIdentifier
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<GE>>=  
      |  |     |  |  |- PrimaryIdentifier
      |  |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>nr_node_ids_V0  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- CompoundStatement
      |  |     |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |     |     |- DeclarationOrStatementList
      |  |     |     |  |- ExpressionStatement
      |  |     |     |  |  |- FunctionCall
      |  |     |     |  |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>fprintf  
      |  |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |     |  |  |  |- ExpressionList
      |  |     |     |  |  |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>stderr  
      |  |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<COMMA>,  
      |  |     |     |  |  |  |  |- StringLiteralList
      |  |     |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<STRINGliteral>"cpumask_of_node(%d): node > nr_node_ids(%d)\n"  
      |  |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<COMMA>,  
      |  |     |     |  |  |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<COMMA>,  
      |  |     |     |  |  |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>nr_node_ids_V0  
      |  |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |     |  |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |     |  |- ReturnStatement
      |  |     |     |     |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |     |     |     |- PrimaryIdentifier
      |  |     |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpu_none_mask  
      |  |     |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |  |     |- SelectionStatement
      |  |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |- EqualityExpression
      |  |     |  |  |- PrimaryExpression
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |  |- PrimaryExpression
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |  |  |- Subscript
      |  |     |  |  |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_to_cpumask_map_V0  
      |  |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |     |  |  |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<EQ>==  
      |  |     |  |  |- PrimaryIdentifier
      |  |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>NULL  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- CompoundStatement
      |  |     |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |     |     |- DeclarationOrStatementList
      |  |     |     |  |- ExpressionStatement
      |  |     |     |  |  |- FunctionCall
      |  |     |     |  |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>fprintf  
      |  |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |     |  |  |  |- ExpressionList
      |  |     |     |  |  |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>stderr  
      |  |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<COMMA>,  
      |  |     |     |  |  |  |  |- StringLiteralList
      |  |     |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<STRINGliteral>"cpumask_of_node(%d): no node_to_cpumask_map!\n"  
      |  |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<COMMA>,  
      |  |     |     |  |  |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |     |  |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |     |  |- ReturnStatement
      |  |     |     |     |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |     |     |     |- PrimaryIdentifier
      |  |     |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpu_online_mask  
      |  |     |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- PrimaryExpression
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |- Subscript
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_to_cpumask_map_V0  
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |  |- DeclarationQualifier
      |  |  |  |     |- TypeQualifier
      |  |  |  |        |- FunctionSpecifier
      |  |  |  |           |- xtc.lang.cpp.Syntax.Language<INLINE>inline  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>setup_node_to_cpumask_map_V1  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- TypedefDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |  |- DeclarationQualifier
      |  |  |  |  |  |- TypeQualifier
      |  |  |  |  |     |- FunctionSpecifier
      |  |  |  |  |        |- xtc.lang.cpp.Syntax.Language<INLINE>inline  
      |  |  |  |  |- DeclarationQualifier
      |  |  |  |     |- TypeQualifier
      |  |  |  |        |- ConstQualifier
      |  |  |  |           |- xtc.lang.cpp.Syntax.Language<CONST>const  
      |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |  |- UnaryIdentifierDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |- FunctionDeclarator
      |  |        |- SimpleDeclarator
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_node_V3  
      |  |        |- PostfixingFunctionDeclarator
      |  |           |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |- ParameterTypeListOpt
      |  |           |  |- ParameterTypeList
      |  |           |     |- ParameterList
      |  |           |        |- ParameterDeclaration
      |  |           |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |           |           |- SimpleDeclarator
      |  |           |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |           |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- PrimaryExpression
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |- Subscript
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_to_cpumask_map_V0  
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Declaration
      |  |- DeclaringList
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- ArrayDeclarator
      |  |  |  |- SimpleDeclarator
      |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mp_bus_to_node_V4  
      |  |  |  |- ArrayAbstractDeclarator
      |  |  |     |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |  |     |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>256  
      |  |  |     |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |        |- MatchedInitializerList
      |  |        |- DesignatedInitializer
      |  |        |  |- Designation
      |  |        |  |  |- DesignatorList
      |  |        |  |  |  |- Designator
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<ELLIPSIS>...  
      |  |        |  |  |     |- AdditiveExpression
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>256  
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |        |  |- Initializer
      |  |        |     |- UnaryExpression
      |  |        |        |- Unaryoperator
      |  |        |        |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |        |        |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |        |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- BasicDeclarationSpecifier
      |  |  |  |  |- DeclarationQualifierList
      |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<UNSIGNED>unsigned  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<CHAR>char  
      |  |  |- ArrayDeclarator
      |  |  |  |- SimpleDeclarator
      |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mp_bus_to_node_V5  
      |  |  |  |- ArrayAbstractDeclarator
      |  |  |     |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |  |     |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>256  
      |  |  |     |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |        |- MatchedInitializerList
      |  |        |- DesignatedInitializer
      |  |        |  |- Designation
      |  |        |  |  |- DesignatorList
      |  |        |  |  |  |- Designator
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<ELLIPSIS>...  
      |  |        |  |  |     |- AdditiveExpression
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>256  
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |        |  |- Initializer
      |  |        |     |- UnaryExpression
      |  |        |        |- Unaryoperator
      |  |        |        |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |        |        |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |        |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>get_mp_bus_to_node_V5  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |        |           |- SimpleDeclarator
      |  |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- Declaration
      |  |     |  |- DeclaringList
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |     |  |  |- SimpleDeclarator
      |  |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- SelectionStatement
      |  |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |- LogicalORExpression
      |  |     |  |  |- RelationalExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LT><  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<OROR>||  
      |  |     |  |  |- RelationalExpression
      |  |     |  |     |- PrimaryIdentifier
      |  |     |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |     |  |     |- xtc.lang.cpp.Syntax.Language<GT>>  
      |  |     |  |     |- PrimaryExpression
      |  |     |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |        |- AdditiveExpression
      |  |     |  |        |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>256  
      |  |     |  |        |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |     |  |        |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |     |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- ReturnStatement
      |  |     |     |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |     |     |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- AssignmentExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |- PrimaryExpression
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |     |- PrimaryExpression
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |     |  |- Subscript
      |  |     |  |  |     |  |  |- PrimaryIdentifier
      |  |     |  |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mp_bus_to_node_V5  
      |  |     |  |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |     |  |  |     |  |  |- PrimaryIdentifier
      |  |     |  |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |     |  |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryIdentifier
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>get_mp_bus_to_node_V4  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |        |           |- SimpleDeclarator
      |  |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- Declaration
      |  |     |  |- DeclaringList
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |     |  |  |- SimpleDeclarator
      |  |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- AssignmentExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |- UnaryExpression
      |  |     |  |  |     |- Unaryoperator
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- SelectionStatement
      |  |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |- LogicalORExpression
      |  |     |  |  |- RelationalExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LT><  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<OROR>||  
      |  |     |  |  |- RelationalExpression
      |  |     |  |     |- PrimaryIdentifier
      |  |     |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |     |  |     |- xtc.lang.cpp.Syntax.Language<GT>>  
      |  |     |  |     |- PrimaryExpression
      |  |     |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |        |- AdditiveExpression
      |  |     |  |        |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>256  
      |  |     |  |        |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |     |  |        |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |     |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- ReturnStatement
      |  |     |     |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |     |     |- PrimaryIdentifier
      |  |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- AssignmentExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |- PrimaryExpression
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |     |- PrimaryExpression
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |     |  |- Subscript
      |  |     |  |  |     |  |  |- PrimaryIdentifier
      |  |     |  |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mp_bus_to_node_V4  
      |  |     |  |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |     |  |  |     |  |  |- PrimaryIdentifier
      |  |     |  |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |     |  |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryIdentifier
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |  |- DeclarationQualifier
      |  |  |  |     |- TypeQualifier
      |  |  |  |        |- FunctionSpecifier
      |  |  |  |           |- xtc.lang.cpp.Syntax.Language<INLINE>inline  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>get_mp_bus_to_node_V6  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |        |           |- SimpleDeclarator
      |  |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>busnum  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- TypedefDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |  |- DeclarationQualifier
      |  |  |  |     |- TypeQualifier
      |  |  |  |        |- ConstQualifier
      |  |  |  |           |- xtc.lang.cpp.Syntax.Language<CONST>const  
      |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |  |- UnaryIdentifierDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |- FunctionDeclarator
      |  |        |- SimpleDeclarator
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_pcibus_V7  
      |  |        |- PostfixingFunctionDeclarator
      |  |           |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |- ParameterTypeListOpt
      |  |           |  |- ParameterTypeList
      |  |           |     |- ParameterList
      |  |           |        |- ParameterDeclaration
      |  |           |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |           |           |- SimpleDeclarator
      |  |           |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |           |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- ConditionalExpression
      |  |        |  |- PrimaryExpression
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |- EqualityExpression
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<EQ>==  
      |  |        |  |  |  |- UnaryExpression
      |  |        |  |  |     |- Unaryoperator
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<QUESTION>?  
      |  |        |  |- PrimaryExpression
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |- UnaryExpression
      |  |        |  |  |  |- Unaryoperator
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Language<AND>&  
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpu_online_mask  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<COLON>:  
      |  |        |  |- PrimaryExpression
      |  |        |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |     |- ConditionalExpression
      |  |        |     |  |- PrimaryExpression
      |  |        |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |     |  |  |- LogicalAndExpression
      |  |        |     |  |  |  |- PrimaryIdentifier
      |  |        |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_NUMA  
      |  |        |     |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |     |  |  |  |- PrimaryIdentifier
      |  |        |     |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_DEBUG_PER_CPU_MAPS  
      |  |        |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |     |  |- xtc.lang.cpp.Syntax.Language<QUESTION>?  
      |  |        |     |  |- FunctionCall
      |  |        |     |  |  |- PrimaryIdentifier
      |  |        |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_node_V2  
      |  |        |     |  |  |- ExpressionList
      |  |        |     |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |     |  |     |- ExpressionList
      |  |        |     |  |     |  |- PrimaryIdentifier
      |  |        |     |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |     |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |     |  |- xtc.lang.cpp.Syntax.Language<COLON>:  
      |  |        |     |  |- FunctionCall
      |  |        |     |     |- PrimaryIdentifier
      |  |        |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_node_V3  
      |  |        |     |     |- ExpressionList
      |  |        |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |     |        |- ExpressionList
      |  |        |     |        |  |- PrimaryIdentifier
      |  |        |     |        |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>local_cpus_show_V8  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |        |           |- SimpleDeclarator
      |  |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- Declaration
      |  |     |  |- DeclaringList
      |  |     |  |  |- TypedefTypeSpecifier
      |  |     |  |  |  |- TypeQualifierList
      |  |     |  |  |  |  |- TypeQualifier
      |  |     |  |  |  |     |- ConstQualifier
      |  |     |  |  |  |        |- xtc.lang.cpp.Syntax.Language<CONST>const  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<TYPEDEFname>cpumask_t  
      |  |     |  |  |- UnaryIdentifierDeclarator
      |  |     |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |  |     |- SimpleDeclarator
      |  |     |  |        |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mask  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- Declaration
      |  |     |  |- DeclaringList
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |     |  |  |- SimpleDeclarator
      |  |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>len  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- AssignmentExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>len  
      |  |     |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- SelectionStatement
      |  |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- PrimaryIdentifier
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_NUMA  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- ExpressionStatement
      |  |     |  |  |- PrimaryExpression
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |  |- AssignmentExpression
      |  |     |  |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mask  
      |  |     |  |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |  |- FunctionCall
      |  |     |  |  |  |     |- PrimaryIdentifier
      |  |     |  |  |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_pcibus_V7  
      |  |     |  |  |  |     |- ExpressionList
      |  |     |  |  |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |  |        |- ExpressionList
      |  |     |  |  |  |        |  |- PrimaryIdentifier
      |  |     |  |  |  |        |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |  |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<ELSE>else  
      |  |     |  |- ExpressionStatement
      |  |     |     |- PrimaryExpression
      |  |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |     |  |- AssignmentExpression
      |  |     |     |  |  |- PrimaryIdentifier
      |  |     |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mask  
      |  |     |     |  |  |- AssignmentOperator
      |  |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |     |  |  |- FunctionCall
      |  |     |     |  |     |- PrimaryIdentifier
      |  |     |     |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>cpumask_of_node_V1  
      |  |     |     |  |     |- ExpressionList
      |  |     |     |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |     |  |        |- ExpressionList
      |  |     |     |  |        |  |- PrimaryIdentifier
      |  |     |     |  |        |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |     |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- FunctionCall
      |  |     |  |  |- PrimaryIdentifier
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>printf  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- ExpressionList
      |  |     |  |  |  |- StringLiteralList
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<STRINGliteral>"mask: %ld\n"  
      |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<COMMA>,  
      |  |     |  |  |  |- PrimaryExpression
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |     |- UnaryExpression
      |  |     |  |  |     |  |- Unaryoperator
      |  |     |  |  |     |  |  |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |  |  |     |  |- PrimaryIdentifier
      |  |     |  |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>mask  
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryIdentifier
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>len  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dev_attr_show_V8  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |        |           |- SimpleDeclarator
      |  |        |              |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- Declaration
      |  |     |  |- DeclaringList
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |     |  |  |- SimpleDeclarator
      |  |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ret  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- AssignmentExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ret  
      |  |     |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |- FunctionCall
      |  |     |  |  |     |- PrimaryIdentifier
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>local_cpus_show_V8  
      |  |     |  |  |     |- ExpressionList
      |  |     |  |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |        |- ExpressionList
      |  |     |  |  |        |  |- PrimaryIdentifier
      |  |     |  |  |        |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node  
      |  |     |  |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryIdentifier
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ret  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>pcibios_scan_root_V8  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- ConditionalExpression
      |  |        |  |  |- PrimaryExpression
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |  |- LogicalORExpression
      |  |        |  |  |  |  |- LogicalAndExpression
      |  |        |  |  |  |  |  |- LogicalAndExpression
      |  |        |  |  |  |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_NUMA  
      |  |        |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |  |  |  |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_PCI  
      |  |        |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |  |  |  |  |  |- PrimaryExpression
      |  |        |  |  |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |  |  |     |- UnaryExpression
      |  |        |  |  |  |  |     |  |- Unaryoperator
      |  |        |  |  |  |  |     |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |  |        |  |  |  |  |     |  |- PrimaryIdentifier
      |  |        |  |  |  |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_X86_64  
      |  |        |  |  |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Language<OROR>||  
      |  |        |  |  |  |  |- LogicalAndExpression
      |  |        |  |  |  |     |- LogicalAndExpression
      |  |        |  |  |  |     |  |- PrimaryIdentifier
      |  |        |  |  |  |     |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_X86_32  
      |  |        |  |  |  |     |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |  |  |  |     |  |- PrimaryIdentifier
      |  |        |  |  |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_NUMA  
      |  |        |  |  |  |     |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |  |  |  |     |- PrimaryIdentifier
      |  |        |  |  |  |        |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_PCI  
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<QUESTION>?  
      |  |        |  |  |- FunctionCall
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>get_mp_bus_to_node_V5  
      |  |        |  |  |  |- ExpressionList
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |     |- ExpressionList
      |  |        |  |  |     |  |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<COLON>:  
      |  |        |  |  |- PrimaryExpression
      |  |        |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |     |- ConditionalExpression
      |  |        |  |     |  |- PrimaryExpression
      |  |        |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |     |  |  |- LogicalAndExpression
      |  |        |  |     |  |  |  |- LogicalAndExpression
      |  |        |  |     |  |  |  |  |- LogicalAndExpression
      |  |        |  |     |  |  |  |  |  |- PrimaryExpression
      |  |        |  |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |     |  |  |  |  |  |  |- UnaryExpression
      |  |        |  |     |  |  |  |  |  |  |  |- Unaryoperator
      |  |        |  |     |  |  |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |  |        |  |     |  |  |  |  |  |  |  |- PrimaryIdentifier
      |  |        |  |     |  |  |  |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_X86_32  
      |  |        |  |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |  |     |  |  |  |  |  |- PrimaryIdentifier
      |  |        |  |     |  |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_NUMA  
      |  |        |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |  |     |  |  |  |  |- PrimaryIdentifier
      |  |        |  |     |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_PCI  
      |  |        |  |     |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |        |  |     |  |  |  |- PrimaryIdentifier
      |  |        |  |     |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_X86_64  
      |  |        |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |     |  |- xtc.lang.cpp.Syntax.Language<QUESTION>?  
      |  |        |  |     |  |- FunctionCall
      |  |        |  |     |  |  |- PrimaryIdentifier
      |  |        |  |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>get_mp_bus_to_node_V4  
      |  |        |  |     |  |  |- ExpressionList
      |  |        |  |     |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |     |  |     |- ExpressionList
      |  |        |  |     |  |     |  |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |        |  |     |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |     |  |- xtc.lang.cpp.Syntax.Language<COLON>:  
      |  |        |  |     |  |- FunctionCall
      |  |        |  |     |     |- PrimaryIdentifier
      |  |        |  |     |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>get_mp_bus_to_node_V6  
      |  |        |  |     |     |- ExpressionList
      |  |        |  |     |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |     |        |- ExpressionList
      |  |        |  |     |        |  |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
      |  |        |  |     |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
         |- FunctionPrototype
         |  |- xtc.lang.cpp.Syntax.Language<INT>int  
         |  |- FunctionDeclarator
         |     |- SimpleDeclarator
         |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>main  
         |     |- PostfixingFunctionDeclarator
         |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |        |- ParameterTypeListOpt
         |        |  |- ParameterTypeList
         |        |     |- ParameterList
         |        |        |- ParameterDeclaration
         |        |        |  |- xtc.lang.cpp.Syntax.Language<INT>int  
         |        |        |  |- SimpleDeclarator
         |        |        |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>argc  
         |        |        |- xtc.lang.cpp.Syntax.Language<COMMA>,  
         |        |        |- ParameterDeclaration
         |        |           |- xtc.lang.cpp.Syntax.Language<CHAR>char  
         |        |           |- UnaryIdentifierDeclarator
         |        |              |- xtc.lang.cpp.Syntax.Language<STAR>*  
         |        |              |- UnaryIdentifierDeclarator
         |        |                 |- xtc.lang.cpp.Syntax.Language<STAR>*  
         |        |                 |- SimpleDeclarator
         |        |                    |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>argv  
         |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
         |- CompoundStatement
         |  |- DeclarationOrStatementList
         |     |- SelectionStatement
         |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
         |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |- PrimaryExpression
         |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |- PrimaryIdentifier
         |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_NUMA  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- ExpressionStatement
         |     |     |- PrimaryExpression
         |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |     |  |- PrimaryExpression
         |     |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |     |  |  |- AssignmentExpression
         |     |     |  |  |  |- PrimaryIdentifier
         |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>nr_node_ids_V0  
         |     |     |  |  |  |- AssignmentOperator
         |     |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
         |     |     |  |  |  |- MultiplicativeExpression
         |     |     |  |  |     |- FunctionCall
         |     |     |  |  |     |  |- PrimaryIdentifier
         |     |     |  |  |     |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>rand  
         |     |     |  |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |     |  |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |     |  |  |     |- xtc.lang.cpp.Syntax.Language<MOD>%  
         |     |     |  |  |     |- PrimaryExpression
         |     |     |  |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |     |  |  |        |- AdditiveExpression
         |     |     |  |  |        |  |- PrimaryExpression
         |     |     |  |  |        |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |     |  |  |        |  |  |- ShiftExpression
         |     |     |  |  |        |  |  |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
         |     |     |  |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<LS><<  
         |     |     |  |  |        |  |  |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>8  
         |     |     |  |  |        |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |     |  |  |        |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
         |     |     |  |  |        |  |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
         |     |     |  |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |- ExpressionStatement
         |     |  |- PrimaryExpression
         |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |- ConditionalExpression
         |     |  |  |  |- PrimaryExpression
         |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |  |  |- PrimaryIdentifier
         |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_NUMA  
         |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |  |  |- xtc.lang.cpp.Syntax.Language<QUESTION>?  
         |     |  |  |  |- FunctionCall
         |     |  |  |  |  |- PrimaryIdentifier
         |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>setup_node_to_cpumask_map_V0  
         |     |  |  |  |  |- ExpressionList
         |     |  |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |  |  |- xtc.lang.cpp.Syntax.Language<COLON>:  
         |     |  |  |  |- FunctionCall
         |     |  |  |     |- PrimaryIdentifier
         |     |  |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>setup_node_to_cpumask_map_V1  
         |     |  |  |     |- ExpressionList
         |     |  |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |- Declaration
         |     |  |- DeclaringList
         |     |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
         |     |  |  |- SimpleDeclarator
         |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_V8  
         |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |- SelectionStatement
         |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
         |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |- PrimaryExpression
         |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |- PrimaryIdentifier
         |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_PCI  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
         |     |  |- ExpressionStatement
         |     |  |  |- PrimaryExpression
         |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |  |- PrimaryExpression
         |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |  |  |- AssignmentExpression
         |     |  |  |  |  |  |- PrimaryIdentifier
         |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_V8  
         |     |  |  |  |  |  |- AssignmentOperator
         |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
         |     |  |  |  |  |  |- FunctionCall
         |     |  |  |  |  |     |- PrimaryIdentifier
         |     |  |  |  |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>pcibios_scan_root_V8  
         |     |  |  |  |  |     |- ExpressionList
         |     |  |  |  |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |  |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |  |- ExpressionStatement
         |     |  |  |- FunctionCall
         |     |  |  |  |- PrimaryIdentifier
         |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dev_attr_show_V8  
         |     |  |  |  |- ExpressionList
         |     |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |     |- ExpressionList
         |     |  |  |     |  |- PrimaryIdentifier
         |     |  |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>node_V8  
         |     |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
         |     |- ReturnStatement
         |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
         |        |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
         |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
