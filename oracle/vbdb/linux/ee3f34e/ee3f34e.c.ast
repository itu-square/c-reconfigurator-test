|- TranslationUnit
   |- ExternalDeclarationList
      |- Declaration
      |  |- DeclaringList
      |  |  |- xtc.lang.cpp.Syntax.Language<CHAR>char  
      |  |  |- ArrayDeclarator
      |  |  |  |- SimpleDeclarator
      |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_include  
      |  |  |  |- ArrayAbstractDeclarator
      |  |  |     |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |  |     |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- StringLiteralList
      |  |           |- xtc.lang.cpp.Syntax.Text<STRINGliteral>"#include <stdbool.h>"  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- Declaration
      |  |- DeclaringList
      |  |  |- xtc.lang.cpp.Syntax.Language<CHAR>char  
      |  |  |- ArrayDeclarator
      |  |  |  |- SimpleDeclarator
      |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_include  
      |  |  |  |- ArrayAbstractDeclarator
      |  |  |     |- xtc.lang.cpp.Syntax.Language<LBRACK>[  
      |  |  |     |- xtc.lang.cpp.Syntax.Language<RBRACK>]  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- StringLiteralList
      |  |           |- xtc.lang.cpp.Syntax.Text<STRINGliteral>"#include <stdlib.h>"  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<_BOOL>_Bool  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>IS_ERR  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- BasicTypeSpecifier
      |  |        |           |  |- TypeQualifierList
      |  |        |           |  |  |- TypeQualifier
      |  |        |           |  |     |- ConstQualifier
      |  |        |           |  |        |- xtc.lang.cpp.Syntax.Language<CONST>const  
      |  |        |           |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |        |           |- UnaryIdentifierDeclarator
      |  |        |              |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |        |              |- SimpleDeclarator
      |  |        |                 |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ptr  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- EqualityExpression
      |  |        |  |  |- PrimaryIdentifier
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ptr  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<EQ>==  
      |  |        |  |  |- CastExpression
      |  |        |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |     |- TypeName
      |  |        |  |     |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |        |  |     |  |- AbstractDeclarator
      |  |        |  |     |     |- UnaryAbstractDeclarator
      |  |        |  |     |        |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |        |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |     |- UnaryExpression
      |  |        |  |        |- Unaryoperator
      |  |        |  |        |  |- xtc.lang.cpp.Syntax.Language<MINUS>-  
      |  |        |  |        |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<_BOOL>_Bool  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>IS_ERR_OR_NULL  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- ParameterTypeListOpt
      |  |        |  |- ParameterTypeList
      |  |        |     |- ParameterList
      |  |        |        |- ParameterDeclaration
      |  |        |           |- BasicTypeSpecifier
      |  |        |           |  |- TypeQualifierList
      |  |        |           |  |  |- TypeQualifier
      |  |        |           |  |     |- ConstQualifier
      |  |        |           |  |        |- xtc.lang.cpp.Syntax.Language<CONST>const  
      |  |        |           |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |        |           |- UnaryIdentifierDeclarator
      |  |        |              |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |        |              |- SimpleDeclarator
      |  |        |                 |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ptr  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- LogicalORExpression
      |  |        |  |- PrimaryExpression
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |- UnaryExpression
      |  |        |  |  |  |- Unaryoperator
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ptr  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<OROR>||  
      |  |        |  |- FunctionCall
      |  |        |     |- PrimaryIdentifier
      |  |        |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>IS_ERR  
      |  |        |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |     |- ExpressionList
      |  |        |     |  |- PrimaryIdentifier
      |  |        |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ptr  
      |  |        |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- Declaration
      |  |- DeclaringList
      |  |  |- BasicDeclarationSpecifier
      |  |  |  |- DeclarationQualifierList
      |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STATIC>static  
      |  |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- SimpleDeclarator
      |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>some_int_V0  
      |  |  |- InitializerOpt
      |  |     |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |- Initializer
      |  |        |- xtc.lang.cpp.Syntax.Text<INTEGERconstant>1  
      |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |  |- UnaryIdentifierDeclarator
      |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |- FunctionDeclarator
      |  |        |- SimpleDeclarator
      |  |        |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ip6_dst_lookup_flow_V0  
      |  |        |- PostfixingFunctionDeclarator
      |  |           |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- ReturnStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- PrimaryExpression
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |  |- UnaryExpression
      |  |        |  |  |  |- Unaryoperator
      |  |        |  |  |  |  |- xtc.lang.cpp.Syntax.Language<AND>&  
      |  |        |  |  |  |- PrimaryIdentifier
      |  |        |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>some_int_V0  
      |  |        |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
      |  |- FunctionPrototype
      |  |  |- xtc.lang.cpp.Syntax.Language<VOID>void  
      |  |  |- FunctionDeclarator
      |  |     |- SimpleDeclarator
      |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>sctp_v6_get_dst_V0  
      |  |     |- PostfixingFunctionDeclarator
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |- CompoundStatement
      |  |  |- DeclarationOrStatementList
      |  |     |- Declaration
      |  |     |  |- DeclaringList
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<INT>int  
      |  |     |  |  |- UnaryIdentifierDeclarator
      |  |     |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |     |  |     |- SimpleDeclarator
      |  |     |  |        |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dst  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- AssignmentExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dst  
      |  |     |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>NULL  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- ExpressionStatement
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- AssignmentExpression
      |  |     |  |  |  |- PrimaryIdentifier
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dst  
      |  |     |  |  |  |- AssignmentOperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |  |  |  |- FunctionCall
      |  |     |  |  |     |- PrimaryIdentifier
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>ip6_dst_lookup_flow_V0  
      |  |     |  |  |     |- ExpressionList
      |  |     |  |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |- SelectionStatement
      |  |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |- PrimaryExpression
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |- UnaryExpression
      |  |     |  |  |  |- Unaryoperator
      |  |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |  |     |  |  |  |- FunctionCall
      |  |     |  |  |     |- PrimaryIdentifier
      |  |     |  |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>IS_ERR  
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |  |  |     |- ExpressionList
      |  |     |  |  |     |  |- PrimaryIdentifier
      |  |     |  |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dst  
      |  |     |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |  |- CompoundStatement
      |  |     |     |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |     |     |- DeclarationOrStatementList
      |  |     |     |  |- ExpressionStatement
      |  |     |     |     |- PrimaryExpression
      |  |     |     |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |     |     |     |  |- AssignmentExpression
      |  |     |     |     |  |  |- PrimaryIdentifier
      |  |     |     |     |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dst  
      |  |     |     |     |  |  |- AssignmentOperator
      |  |     |     |     |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |     |     |     |  |  |- PrimaryIdentifier
      |  |     |     |     |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>NULL  
      |  |     |     |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |     |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |     |     |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |  |     |- SelectionStatement
      |  |        |- xtc.lang.cpp.Syntax.Language<IF>if  
      |  |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |- PrimaryExpression
      |  |        |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |- UnaryExpression
      |  |        |  |  |- Unaryoperator
      |  |        |  |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |  |        |  |  |- FunctionCall
      |  |        |  |     |- PrimaryIdentifier
      |  |        |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>IS_ERR  
      |  |        |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |        |  |     |- ExpressionList
      |  |        |  |     |  |- PrimaryIdentifier
      |  |        |  |     |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dst  
      |  |        |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |        |- CompoundStatement
      |  |           |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
      |  |           |- DeclarationOrStatementList
      |  |           |  |- Declaration
      |  |           |  |  |- DeclaringList
      |  |           |  |  |  |- xtc.lang.cpp.Syntax.Language<CHAR>char  
      |  |           |  |  |  |- UnaryIdentifierDeclarator
      |  |           |  |  |     |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |           |  |  |     |- SimpleDeclarator
      |  |           |  |  |        |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>rt  
      |  |           |  |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |           |  |- ExpressionStatement
      |  |           |  |  |- PrimaryExpression
      |  |           |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |  |  |  |- AssignmentExpression
      |  |           |  |  |  |  |- PrimaryIdentifier
      |  |           |  |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>rt  
      |  |           |  |  |  |  |- AssignmentOperator
      |  |           |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ASSIGN>=  
      |  |           |  |  |  |  |- CastExpression
      |  |           |  |  |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |  |  |  |     |- TypeName
      |  |           |  |  |  |     |  |- xtc.lang.cpp.Syntax.Language<CHAR>char  
      |  |           |  |  |  |     |  |- AbstractDeclarator
      |  |           |  |  |  |     |     |- UnaryAbstractDeclarator
      |  |           |  |  |  |     |        |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |           |  |  |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |  |  |  |     |- PrimaryIdentifier
      |  |           |  |  |  |        |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>dst  
      |  |           |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |  |  |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |           |  |- ExpressionStatement
      |  |           |     |- PrimaryExpression
      |  |           |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |     |  |- ConditionalExpression
      |  |           |     |  |  |- PrimaryExpression
      |  |           |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |     |  |  |  |- LogicalORExpression
      |  |           |     |  |  |  |  |- LogicalAndExpression
      |  |           |     |  |  |  |  |  |- UnaryExpression
      |  |           |     |  |  |  |  |  |  |- Unaryoperator
      |  |           |     |  |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<NOT>!  
      |  |           |     |  |  |  |  |  |  |- PrimaryIdentifier
      |  |           |     |  |  |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_SCTP_DEBUG  
      |  |           |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |           |     |  |  |  |  |  |- PrimaryIdentifier
      |  |           |     |  |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_SCTP_DBG_MSG  
      |  |           |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<OROR>||  
      |  |           |     |  |  |  |  |- LogicalAndExpression
      |  |           |     |  |  |  |     |- PrimaryIdentifier
      |  |           |     |  |  |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_SCTP_DEBUG  
      |  |           |     |  |  |  |     |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
      |  |           |     |  |  |  |     |- PrimaryIdentifier
      |  |           |     |  |  |  |        |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>SCTP_DEBUG  
      |  |           |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |     |  |  |- xtc.lang.cpp.Syntax.Language<QUESTION>?  
      |  |           |     |  |  |- PrimaryExpression
      |  |           |     |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |     |  |  |  |- PrimaryExpression
      |  |           |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |     |  |  |  |  |- Increment
      |  |           |     |  |  |  |  |  |- PrimaryExpression
      |  |           |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |     |  |  |  |  |  |  |- UnaryExpression
      |  |           |     |  |  |  |  |  |  |  |- Unaryoperator
      |  |           |     |  |  |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<STAR>*  
      |  |           |     |  |  |  |  |  |  |  |- PrimaryIdentifier
      |  |           |     |  |  |  |  |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>rt  
      |  |           |     |  |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |     |  |  |  |  |  |- xtc.lang.cpp.Syntax.Language<ICR>++  
      |  |           |     |  |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |     |  |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |     |  |  |- xtc.lang.cpp.Syntax.Language<COLON>:  
      |  |           |     |  |  |- FunctionCall
      |  |           |     |  |     |- PrimaryIdentifier
      |  |           |     |  |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_skip  
      |  |           |     |  |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
      |  |           |     |  |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
      |  |           |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
      |  |           |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |  |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
      |- FunctionDefinition
         |- FunctionPrototype
         |  |- xtc.lang.cpp.Syntax.Language<INT>int  
         |  |- FunctionDeclarator
         |     |- SimpleDeclarator
         |     |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>main  
         |     |- PostfixingFunctionDeclarator
         |        |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |        |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |- xtc.lang.cpp.Syntax.Language<LBRACE>{  
         |- CompoundStatement
         |  |- DeclarationOrStatementList
         |     |- SelectionStatement
         |     |  |- xtc.lang.cpp.Syntax.Language<IF>if  
         |     |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |- PrimaryExpression
         |     |  |  |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |  |  |- LogicalAndExpression
         |     |  |  |  |- PrimaryIdentifier
         |     |  |  |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_IP_SCTP  
         |     |  |  |  |- xtc.lang.cpp.Syntax.Language<ANDAND>&&  
         |     |  |  |  |- PrimaryIdentifier
         |     |  |  |     |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>_reconfig_CONFIG_IPV6  
         |     |  |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |  |- ExpressionStatement
         |     |     |- FunctionCall
         |     |     |  |- PrimaryIdentifier
         |     |     |  |  |- xtc.lang.cpp.Syntax.Text<IDENTIFIER>sctp_v6_get_dst_V0  
         |     |     |  |- ExpressionList
         |     |     |     |- xtc.lang.cpp.Syntax.Language<LPAREN>(  
         |     |     |     |- xtc.lang.cpp.Syntax.Language<RPAREN>)  
         |     |     |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |     |- ReturnStatement
         |        |- xtc.lang.cpp.Syntax.Language<RETURN>return  
         |        |- xtc.lang.cpp.Syntax.Text<OCTALconstant>0  
         |        |- xtc.lang.cpp.Syntax.Language<SEMICOLON>;  
         |- xtc.lang.cpp.Syntax.Language<RBRACE>}  
